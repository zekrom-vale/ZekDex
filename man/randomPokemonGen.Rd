% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Random.R
\name{randomPokemonGen}
\alias{randomPokemonGen}
\title{Returns a random Pokemon Generator}
\usage{
randomPokemonGen(..., p = English, replace = FALSE)
}
\arguments{
\item{p}{What column to return (Ndex, English, form, form2, type, type2 can be used)}

\item{replace}{Should sampling be with replacement?}

\item{type}{Filter on type}

\item{type2}{Filter on type2}

\item{swap}{Allow type to match type2 and vicea-versa}

\item{data}{Override the data (Must have type and type2 (If type 2 is not ANY or swap is TRUE))}
}
\description{
Returns a random Pokemon Generator
}
\examples{
# Create a random Pokemon generator for any type of Pokemon
gen_any <- randomPokemonGen()
# Generate a random Pokemon
gen_any()
# > "Rayquaza"

# Create a random Pokemon generator for Fire type Pokemon
gen_fire <- randomPokemonGen(type = "Fire")
# Generate a random Fire type Pokemon
gen_fire()
# > "Reshiram"

# Create a random Pokemon generator for Fire and Flying type Pokemon
gen_fire_flying <- randomPokemonGen(type = "Fire", type2 = "Flying")
# Generate a random Fire and Flying type Pokemon
gen_fire_flying()
# > "Charizard"

# Create a random Pokemon generator for Fire or Flying type Pokemon
gen_dragon_or_electric <- randomPokemonGen(type = "Dragon", type2 = "Electric", swap = TRUE)
# Generate a random Fire or Flying type Pokemon
gen_dragon_or_electric()
# > "Zekrom"
gen_dragon_or_electric()
# > "Rayquaza"

# Create a random Pokemon generator for all Dragon type Pokemon
gen_all_dragon <- randomPokemonGen(type = "Dragon", swap = TRUE)
# Generate all Dragon type Pokemon
while(!is.null(pokemon <- gen_all_dragon())) {
  print(pokemon)
}
# > "Zekrom", "Dreepy", "Guzzlord", "Archaludon", "Dragonite", "Raging Bolt",
# > "Frigibax", "Zweilous", "Goodra", "Rayquaza", "Regidrago", "Garchomp",
# > "Kingdra", "Roaring Moon", "Drakloak", "Jangmo-o", "Bagon", "Eternatus",
# > "Turtonator", "Altaria", "Goomy", "Baxcalibur", "Hydreigon", "Druddigon",
# > "Hydrapple", "Miraidon", "Dragapult", "Salamence", "Drampa", "Fraxure",
# > "Duraludon", "Zygarde", "Cyclizar", "Haxorus", "Dipplin", "Dratini",
# > "Dracovish", "Noibat", "Gouging Fire", "Latios", "Kyurem", "Latias",
# > "Palkia", "Walking Wake", "Kommo-o", "Sliggoo", "Vibrava", "Giratina",
# > "Dracozolt", "Flygon", "Tyrunt", "Shelgon", "Tatsugiri", "Dragalge",
# > "Axew", "Zygarde50", "Arctibax", "Tyrantrum", "Flapple", "Gible",
# > "Deino", "Applin", "Exeggutor", "Hakamo-o", "Noivern", "Koraidon",
# > "Dragonair", "Dialga", "Gabite", "Appletun", "Reshiram", "Naganadel",
# > "Zygarde10"

# Return the dex number instead
gen_dex <- randomPokemonGen(type = "Dragon", swap = TRUE, p = Ndex)
# Generate all Dragon type Pokemon dex numbers
while(!is.null(pokemon <- gen_dex())) {
  print(pokemon)
}
# > "#1011", "#1019", "#0371", "#0633", "#0634", "#0841", "#0334", "#0691",
# > "#0644", "#0718", "#0782", "#0381", "#0445", "#0804", "#0840", "#0704",
# > "#0799", "#0886", "#0380", "#0330", "#0842", "#0880", "#0714", "#0147",
# > "#0895", "#0646", "#0635", "#0705", "#0884", "#1018", "#0967", "#0384",
# > "#0372", "#0373", "#0621", "#0780", "#0696", "#0887", "#0483", "#1008",
# > "#0882", "#0706", "#0697", "#1005", "#0784", "#0610", "#0978", "#0998",
# > "#0890", "#0997", "#0148", "#0443", "#0715", "#0776", "#0230", "#0611",
# > "#0783", "#0996", "#1020", "#0103", "#0643", "#1009", "#0487", "#0329",
# > "#0885", "#0612", "#0444", "#0149", "#1021", "#1007", "#0484"

# Create a random Pokemon generator for Dragon type Pokemon with replacement
gen_dragon_replace <- randomPokemonGen(type = "Dragon", replace = TRUE)
# Generate 5 random Dragon type Pokemon with replacement
replicate(5, gen_dragon_replace())
# > "Zekrom" "Rayquaza" "Garchomp" "Zekrom" "Haxorus"
}
